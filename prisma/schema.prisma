generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Tournament {
  id              String              @id @default(cuid()) @map("tournament_pkey")
  title           String
  numPlayers      Int
  description     String?
  private         Boolean             @default(false)
  privatePassword String?
  ownerId         String?             @map("owner_id")
  owner           User?               @relation(fields: [ownerId], references: [id], name: "UserTournaments")
  category        String?
  participants    TournamentParticipant[]
  matches         Match[]
  createdAt       DateTime            @default(now()) @map("created_at")
  finishedAt      DateTime
}

model User {
  id                  String                   @id @default(cuid()) @map("user_pkey")
  name                String?
  lastName            String?
  email               String?                  @unique @map("user_email_key")
  country             String?
  password            String?
  position            String?
  createdAt           DateTime                 @default(now()) @map("created_at")
  username            String?                  @unique @map("user_username_key")
  prime               Boolean                  @default(false)
  ottCode             String?
  tournaments         Tournament[]             @relation("UserTournaments")
  participants        TournamentParticipant[]
  matchesPlayer1      Match[]                  @relation("MatchPlayer1")
  matchesPlayer2      Match[]                  @relation("MatchPlayer2")
  matchesWon          Match[]                  @relation("MatchWinner")
}

model TournamentParticipant {
  tournamentId String
  userId       String
  joinedAt     DateTime @default(now())
  position     String?

  tournament   Tournament @relation(fields: [tournamentId], references: [id])
  user         User       @relation(fields: [userId], references: [id])

  @@id([tournamentId, userId])
  @@map("tournament_participant_pkey")
}

model Match {
  id            String    @id @default(cuid())
  tournamentId  String
  player1Id     String
  player2Id     String
  player1Score  Int
  player2Score  Int
  winnerId      String?
  createdAt     DateTime  @default(now())

  tournament    Tournament  @relation(fields: [tournamentId], references: [id])
  player1       User        @relation("MatchPlayer1", fields: [player1Id], references: [id])
  player2       User        @relation("MatchPlayer2", fields: [player2Id], references: [id])
  winner        User?       @relation("MatchWinner", fields: [winnerId], references: [id])
}

